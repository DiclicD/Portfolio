<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portfolio de Développeur C# - John Doe</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        :root {
            --primary-color: #8A2BE2;
            --secondary-color: #4B0082;
            --accent-color: #FFD700;
            --text-color: #333;
            --background-color: #f4f4f4;
            --card-background: #ffffff;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Roboto', sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            background-color: var(--background-color);
        }

        header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 1rem 0;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        nav {
            display: flex;
            justify-content: space-around;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
        }

        nav a {
            color: white;
            text-decoration: none;
            padding: 0.5rem 1rem;
            transition: all 0.3s ease;
            border-radius: 5px;
        }

        nav a:hover, nav a.active {
            background-color: var(--accent-color);
            color: var(--secondary-color);
        }

        section {
            padding: 6rem 2rem;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        h1, h2 {
            margin-bottom: 1rem;
            color: var(--primary-color);
        }

        #home {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            text-align: center;
        }

        #about, #projects, #skills, #contact {
            background-color: var(--card-background);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            margin: 2rem auto;
            max-width: 1200px;
            width: 100%;
        }

        .project-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 2rem;
            width: 100%;
            max-width: 1200px;
        }

        .project-card {
            background-color: var(--card-background);
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            cursor: pointer;
        }

        .project-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }

        .project-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .project-card:hover img {
            transform: scale(1.05);
        }

        .project-card .content {
            padding: 1rem;
        }

        .skills-list {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 1rem;
            width: 100%;
            max-width: 800px;
        }

        .skill-item {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
            transition: transform 0.3s ease;
        }

        .skill-item:hover {
            transform: scale(1.05);
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            width: 100%;
            max-width: 500px;
        }

        input, textarea {
            padding: 0.5rem;
            border: 1px solid var(--primary-color);
            border-radius: 4px;
            transition: box-shadow 0.3s ease;
        }

        input:focus, textarea:focus {
            outline: none;
            box-shadow: 0 0 0 2px var(--primary-color);
        }

        button {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            border-radius: 5px;
        }

        button:hover {
            background: linear-gradient(135deg, var(--secondary-color), var(--primary-color));
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1001;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: var(--card-background);
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 600px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

        #load-more {
            margin-top: 2rem;
        }

        .hidden {
            display: none;
        }

        @media (max-width: 768px) {
            nav {
                flex-direction: column;
            }

            nav a {
                width: 100%;
                text-align: center;
                padding: 0.5rem 0;
            }

            section {
                padding: 4rem 1rem;
            }

            .project-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <header>
        <nav>
            <a href="#home" aria-label="Accueil">Accueil</a>
            <a href="#about" aria-label="À propos">À propos</a>
            <a href="#projects" aria-label="Projets">Projets</a>
            <a href="#skills" aria-label="Compétences">Compétences</a>
            <a href="#contact" aria-label="Contact">Contact</a>
        </nav>
    </header>

    <main>
        <section id="home" class="animate__animated animate__fadeIn">
            <h1>John Doe</h1>
            <p>Développeur C# passionné</p>
        </section>

        <section id="about" class="animate__animated animate__fadeIn">
            <h2>À propos de moi</h2>
            <p>Je suis un développeur C# expérimenté avec une passion pour la création d'applications robustes et évolutives. Avec plus de 5 ans d'expérience dans le développement .NET, j'ai travaillé sur une variété de projets allant des applications de bureau aux services web.</p>
        </section>

        <section id="projects" class="animate__animated animate__fadeIn">
            <h2>Mes Projets</h2>
            <div class="project-grid" id="project-container">
                <!-- Les projets seront ajoutés dynamiquement ici -->
                
            </div>
            <button id="load-more">Voir plus</button>
        </section>

        <section id="skills" class="animate__animated animate__fadeIn">
            <h2>Mes Compétences</h2>
            <div class="skills-list">
                <span class="skill-item">C#</span>
                <span class="skill-item">.NET Core</span>
                <span class="skill-item">ASP.NET</span>
                <span class="skill-item">Entity Framework</span>
                <span class="skill-item">SQL Server</span>
                <span class="skill-item">Azure</span>
                <span class="skill-item">Git</span>
                <span class="skill-item">Agile/Scrum</span>
            </div>
        </section>

        <section id="contact" class="animate__animated animate__fadeIn">
            <h2>Contactez-moi</h2>
            <form id="contact-form">
                <input type="text" name="name" placeholder="Votre nom" required aria-label="Votre nom">
                <input type="email" name="email" placeholder="Votre email" required aria-label="Votre email">
                <textarea name="message" placeholder="Votre message" required aria-label="Votre message"></textarea>
                <button type="submit">Envoyer</button>
            </form>
        </section>
    </main>

    <div id="project-modal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h3 id="modal-title"></h3>
            <p id="modal-description"></p>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/ScrollTrigger.min.js"></script>
    <script>
        gsap.registerPlugin(ScrollTrigger);

        const projects = [
            { title: "Projet 1", description: "Description détaillée du projet 1", image: "/api/placeholder/400/300" },
            { title: "Projet 2", description: "Description détaillée du projet 2", image: "/api/placeholder/400/300" },
            { title: "Projet 3", description: "Description détaillée du projet 3", image: "/api/placeholder/400/300" },
            { title: "Projet 4", description: "Description détaillée du projet 4", image: "/api/placeholder/400/300" },
            { title: "Projet 5", description: "Description détaillée du projet 5", image: "/api/placeholder/400/300" },
            { title: "Projet 6", description: "Description détaillée du projet 6", image: "/api/placeholder/400/300" },
        ];

        let visibleProjects = 3;

        function loadProjects() {
            const container = document.getElementById('project-container');
            container.innerHTML = '';
            for (let i = 0; i < visibleProjects; i++) {
                if (projects[i]) {
                    const projectCard = document.createElement('div');
                    projectCard.className = 'project-card';
                    projectCard.innerHTML = `
                        <img src="${projects[i].image}" alt="${projects[i].title}" loading="lazy">
                        <div class="content">
                            <h3>${projects[i].title}</h3>
                            <p>${projects[i].description.substring(0, 50)}...</p>
                        </div>
                    `;
                    projectCard.addEventListener('click', () => openModal(projects[i]));
                    container.appendChild(projectCard);
                }
            }
            document.getElementById('load-more').style.display = visibleProjects >= projects.length ? 'none' : 'block';
        }

        document.getElementById('load-more').addEventListener('click', () => {
            visibleProjects = Math.min(visibleProjects + 3, projects.length);
            loadProjects();
        });

        function openModal(project) {
            const modal = document.getElementById('project-modal');
            document.getElementById('modal-title').textContent = project.title;
            document.getElementById('modal-description').textContent = project.description;
            modal.style.display = 'block';
        }

        document.querySelector('.close').addEventListener('click', () => {
            document.getElementById('project-modal').style.display = 'none';
        });

        window.addEventListener('click', (event) => {
            if (event.target == document.getElementById('project-modal')) {
                document.getElementById('project-modal').style.display = 'none';
            }
        });

        gsap.utils.toArray('section').forEach((section, i) => {
            gsap.from(section, {
                opacity: 0,
                y: 50,
                duration: 1,
                scrollTrigger: {
                    trigger: section,
                    start: 'top 80%',
                    end: 'bottom 20%',
                    toggleActions: 'play none none reverse'
                }
            });
        });

        const navLinks = document.querySelectorAll('nav a');
        const sections = document.querySelectorAll('section');

        function setActiveLink() {
            let index = sections.length;

            while(--index && window.scrollY + 50 < sections[index].offsetTop) {}
            
            navLinks.forEach((link) => link.classList.remove('active'));
            navLinks[index].classList.add('active');
        }

        setActiveLink();
        window.addEventListener('scroll', setActiveLink);

        navLinks.forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                document.querySelector(this.getAttribute('href')).scrollIntoView({
                    behavior: 'smooth'
                });
            });
        });

        document.getElementById('contact-form').addEventListener('submit', function(e) {
            e.preventDefault();
            if (this.checkValidity()) {
                      document.getElementById('contact-form').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Capture les données du formulaire
            const formData = new FormData(this);
            const name = formData.get('name');
            const email = formData.get('email');
            const message = formData.get('message');

            // Simule l'envoi d'un email (ici, tu pourrais intégrer EmailJS, ou un backend pour réellement envoyer le message)
            if (name && email && message) {
                alert(`Merci ${name}, votre message a été envoyé avec succès!`);
                this.reset(); // Réinitialise le formulaire après soumission
            } else {
                alert("Veuillez remplir tous les champs du formulaire.");
            }
        });
    </script>
</body>
</html>
